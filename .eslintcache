[{"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\reportWebVitals.js":"1","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Alert.jsx":"2","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Charts.jsx":"3","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\App.js":"4","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Prediction.jsx":"5","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Maps.jsx":"6","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\MinistryConfirm.js":"7","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Ministry.js":"8"},{"size":375,"mtime":1611219323550,"results":"9","hashOfConfig":"10"},{"size":7065,"mtime":1611219323372,"results":"11","hashOfConfig":"10"},{"size":3222,"mtime":1611219323374,"results":"12","hashOfConfig":"10"},{"size":4723,"mtime":1611226788591,"results":"13","hashOfConfig":"10"},{"size":4932,"mtime":1611219323379,"results":"14","hashOfConfig":"10"},{"size":918,"mtime":1611219323375,"results":"15","hashOfConfig":"10"},{"size":799,"mtime":1611224204011,"results":"16","hashOfConfig":"10"},{"size":1819,"mtime":1611227086243,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wmfq7p",{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\reportWebVitals.js",[],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Alert.jsx",["37","38","39","40"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Charts.jsx",["41","42","43"],"import React, { useState, useEffect } from \"react\"\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nfunction Charts(props) {\r\n    const [labels, setLabels] = useState(props.labels);\r\n    const [dataGraph, setdataGraph] = useState(props.dataGraph);\r\n    // const createDataGraph = () => {\r\n    //     let risk = props.riskPrediction;\r\n    //     if (risk<2) {\r\n    //         risk = (risk-1)*100;\r\n    //         setdataGraph([risk, 100-risk, 0]);\r\n    //     }else if(risk < 3){\r\n    //         risk = (risk-2)*100;\r\n    //         setdataGraph([0, risk, 100-risk]);\r\n    //     }else{\r\n    //         setdataGraph([0, 0, 100]);\r\n    //     }\r\n    // }\r\n\r\n    useEffect(() => {\r\n        console.log(props.dataGraph);\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     console.log(props);\r\n    //     setInterval(() => {\r\n    //         console.log(props)\r\n    //         setLabels(props)\r\n    //     }, 500);\r\n        \r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     if(labels !=[] ){\r\n    //         clearInterval();\r\n    //     }\r\n    // }, [labels])\r\n    return (\r\n\r\n        <div className=\"mx-4 mt-3\">\r\n            <Bar\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        label: 'Inspections',\r\n                        backgroundColor: [\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)',\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)',\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)'\r\n                        ],\r\n                        data: dataGraph\r\n                    }]\r\n                }}\r\n                height={300}\r\n\r\n                options={{\r\n                    title: {\r\n                        display:true,\r\n                        text: 'Gravity',\r\n                        // fontsize: \"\"\r\n                    },\r\n                    legend: {\r\n                        display:false,\r\n                    },\r\n                    scales: {\r\n                        yAxes:[\r\n                            {\r\n                                ticks: {\r\n                                    min:0,\r\n                                    max: 3,\r\n                                    stepSize:0.5,\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Charts","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\App.js",["44"],"import { Combobox } from 'react-widgets';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport Alert from './Component/Alert';\r\nimport Prediction from './Component/Prediction';\r\nimport MinistryConfirm from './Component/MinistryConfirm';\r\nimport Ministry from './Component/Ministry';\r\nlet Api_Url =\r\n  'https://indigestion-prediction-backend.herokuapp.com/api/restaurants/';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [selected, setSelected] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [showPredict, setShowPredict] = useState(false);\r\n  const [alertProps, setAlertProps] = useState({});\r\n  const [mConfirm, setMConfirm] = useState(false)\r\n  const [ministry, setMinistry] = useState(false)\r\n\r\n  function toTitleCase(str) {\r\n    return str.replace(/\\w\\S*/g, function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  }\r\n\r\n  const addTabOption = (data) => {\r\n    data.forEach((element) => {\r\n      element.text = `${toTitleCase(element.DBA_Name)} at ${toTitleCase(\r\n        element.Address \r\n      )}`;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${Api_Url}`)\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        addTabOption(d);\r\n        setData(d);\r\n        let selections = d.map((elem) => elem.text);\r\n        selections.sort();\r\n        setOptions(selections);\r\n      })\r\n      .catch((e) => {\r\n        Swal.fire('Trouble connecting to server');\r\n      });\r\n  }, []);\r\n\r\n  const handleSelected = (e) => {\r\n    setSelected(e);\r\n    setShowAlert(false);\r\n    setShowPredict(false);\r\n        setMConfirm(false);\r\n        setMinistry(false);\r\n  };\r\n\r\n  const showAssessment = () => {\r\n    setShowAlert(false);\r\n    setMConfirm(false);\r\n    setMinistry(false);\r\n\r\n    try {\r\n      const restaurant = data.find((elem) => elem.text === selected);\r\n      let rest = {\r\n        restaurantName: restaurant.DBA_Name,\r\n        restaurantAddress: restaurant.Address,\r\n        License: restaurant.License\r\n      };\r\n      setAlertProps(rest);\r\n      setShowPredict(true);\r\n    } catch {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleShowAlert = () => {\r\n    setShowPredict(false);\r\n        setMConfirm(false);\r\n        setMinistry(false);\r\n\r\n    try {\r\n      const restaurant = data.find((elem) => elem.text === selected);\r\n      let rest = {\r\n        restaurantName: restaurant.DBA_Name,\r\n        restaurantAddress: restaurant.Address,\r\n        License: restaurant.License\r\n      };\r\n      setAlertProps(rest);\r\n      setShowAlert(true);\r\n    } catch {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const grantAccess =  () => {\r\n    setMConfirm(false)\r\n    setMinistry(true)\r\n  }\r\n\r\n\r\n  const denyAccess =() => {\r\n    Swal.fire('Access denied');\r\n    setMConfirm(false)\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"top px-3 py-3 rounded\">\r\n        <div className=\"title\">\r\n          <h2>Welcome to Indigert</h2>\r\n          <div onClick={() => setMConfirm(true)} className=\"titleBtn\">\r\n            Access Health Ministry Section\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        To report a problem or see our predicted rating, please select a\r\n        restaurant:\r\n        <div className=\"selector   my-3\">\r\n          <Combobox\r\n            data={options}\r\n            onChange={(e) => handleSelected(e)}\r\n            caseSensitive={false}\r\n            minLength={3}\r\n            filter=\"contains\"\r\n          />\r\n        </div>{' '}\r\n        {selected !== '' && (\r\n          <p className=\"btns mt-2\">\r\n            <Button\r\n              className=\"mr-5 font-weight-bold btn\"\r\n              variant=\"danger\"\r\n              onClick={() => handleShowAlert()}\r\n            >\r\n              Report a potential problem\r\n            </Button>\r\n            <Button\r\n              className=\"ml-5 font-weight-bold btn\"\r\n              variant=\"secondary\"\r\n              onClick={() => showAssessment()}\r\n            >\r\n              See our assessment\r\n            </Button>\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n        {ministry &&  <div className= 'pt-5'><Ministry /></div>}\r\n        {mConfirm && <MinistryConfirm confirm={() => grantAccess()} deny={ () => denyAccess()}/>}\r\n          {showPredict && <Prediction restaurant={alertProps} />}\r\n          {showAlert && <Alert restaurant={alertProps} allRestaurant={data} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Prediction.jsx",["45","46","47"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Maps.jsx",["48","49"],"import React, { useState, useEffect } from 'react'\r\nimport { GoogleMap, withScriptjs, withGoogleMap } from \"react-google-maps\";\r\n\r\n\r\n\r\nexport default function Maps(props) {\r\n\r\n    const Map = () => {\r\n        return (\r\n            <GoogleMap\r\n                defaultZoom={12}\r\n                defaultCenter={{ lat: props.Latitude, lng: props.Longitude }}\r\n            />\r\n        );\r\n    }\r\n    \r\n    const WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\n    return (\r\n        <div style = {{width: \"470px\", height: \"540px\"}}>\r\n            <WrappedMap\r\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places`}\r\n                loadingElement={<div style={{ height: '100%' }} />}\r\n                containerElement={<div style={{ height: '100%' }} />}\r\n                mapElement={<div style={{ height: '100%' }} />}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\MinistryConfirm.js",["50"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Ministry.js",["51","52"],{"ruleId":"53","severity":1,"message":"54","line":20,"column":15,"nodeType":"55","messageId":"56","endLine":20,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":33,"column":52,"nodeType":"59","messageId":"60","endLine":33,"endColumn":54},{"ruleId":"61","severity":1,"message":"62","line":51,"column":8,"nodeType":"63","endLine":51,"endColumn":10,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":67,"column":36,"nodeType":"67","endLine":67,"endColumn":66},{"ruleId":"53","severity":1,"message":"68","line":5,"column":20,"nodeType":"55","messageId":"56","endLine":5,"endColumn":29},{"ruleId":"53","severity":1,"message":"69","line":6,"column":23,"nodeType":"55","messageId":"56","endLine":6,"endColumn":35},{"ruleId":"61","severity":1,"message":"70","line":22,"column":8,"nodeType":"63","endLine":22,"endColumn":10,"suggestions":"71"},{"ruleId":"61","severity":1,"message":"72","line":52,"column":6,"nodeType":"63","endLine":52,"endColumn":8,"suggestions":"73"},{"ruleId":"53","severity":1,"message":"74","line":2,"column":16,"nodeType":"55","messageId":"56","endLine":2,"endColumn":22},{"ruleId":"53","severity":1,"message":"75","line":8,"column":12,"nodeType":"55","messageId":"56","endLine":8,"endColumn":26},{"ruleId":"53","severity":1,"message":"76","line":8,"column":28,"nodeType":"55","messageId":"56","endLine":8,"endColumn":45},{"ruleId":"53","severity":1,"message":"77","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"78","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"58","line":12,"column":18,"nodeType":"59","messageId":"60","endLine":12,"endColumn":20},{"ruleId":"53","severity":1,"message":"79","line":4,"column":7,"nodeType":"55","messageId":"56","endLine":4,"endColumn":11},{"ruleId":"61","severity":1,"message":"80","line":52,"column":8,"nodeType":"63","endLine":52,"endColumn":10,"suggestions":"81"},"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.restaurant' and 'updateLongAndLat'. Either include them or remove the dependency array. If 'setAlertInfo' needs the current value of 'props.restaurant', you can also switch to useReducer instead of useState and read 'props.restaurant' in the reducer.","ArrayExpression",["82"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setLabels' is assigned a value but never used.","'setdataGraph' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.dataGraph'. Either include it or remove the dependency array.",["83"],"React Hook useEffect has a missing dependency: 'addTabOption'. Either include it or remove the dependency array.",["84"],"'Button' is defined but never used.","'dataInspection' is assigned a value but never used.","'setDataInspection' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'fake' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addTabOptions'. Either include it or remove the dependency array.",["85"],{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [props.restaurant, updateLongAndLat]",{"range":"94","text":"95"},"Update the dependencies array to be: [props.dataGraph]",{"range":"96","text":"97"},"Update the dependencies array to be: [addTabOption]",{"range":"98","text":"99"},"Update the dependencies array to be: [addTabOptions]",{"range":"100","text":"101"},[1697,1699],"[props.restaurant, updateLongAndLat]",[719,721],"[props.dataGraph]",[1733,1735],"[addTabOption]",[1480,1482],"[addTabOptions]"]