{"version":3,"sources":["Component/Maps.jsx","Component/alertForm.jsx","Component/Alert.jsx","Component/Charts.jsx","Component/ourPrediction.js","Component/Prediction.jsx","Component/MinistryConfirm.js","Component/Pagination.js","Component/Ministry.js","App.js","reportWebVitals.js","index.js"],"names":["Maps","props","useEffect","console","log","nameCity","WrappedMap","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","Latitude","lng","Longitude","allRestaurant","map","element","City","position","License","style","width","height","googleMapURL","loadingElement","containerElement","mapElement","AlertForm","useState","alertInfo","setAlertInfo","restaurant","className","Form","onSubmit","e","preventDefault","axios","post","then","res","catch","error","handleAlertDone","handleSubmit","Row","Group","as","Col","controlId","value","fullName","onChange","target","Label","Control","type","placeholder","required","Text","address","restaurantName","readOnly","restaurantAddress","itemPurchased","dateOfPurchase","timeOfPurchase","symptoms","Button","variant","Alert","alertDone","setAlertDone","longAndLat","setLongAndLat","index","length","updateLongAndLat","onClick","Charts","labels","dataGraph","data","datasets","label","backgroundColor","options","title","display","text","legend","scales","yAxes","ticks","min","max","stepSize","OurPrediction","predicted","Prediction","setLabels","setDataGraph","loading","setLoading","get","response","getLabels","Inspection_Date","getRiskPred","Risk_pred","name","MinistryConfirm","pass","setPass","confirm","deny","Pagination","listPerPage","totalList","paginate","pageNumber","Math","ceil","push","number","href","Ministry","list","setList","currentPage","setCurrentPage","indexOfLastList","indexOfFirstList","currentList","slice","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","fetch","r","json","d","fetched","elem","sort","a","b","NumberOfAlerts","nameFormatted","DBA_Name","addressFormatted","Address","id","window","alert","App","setData","setOptions","selected","setSelected","showAlert","setShowAlert","showPredict","setShowPredict","alertProps","setAlertProps","mConfirm","setMConfirm","ministry","setMinistry","setNameCity","forEach","addTabOption","selections","Swal","fire","handleSelected","caseSensitive","minLength","filter","find","rest","cityName","handleShowAlert","showAssessment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34c40b02.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from \"react-google-maps\";\r\n\r\n\r\n\r\nexport default function Maps(props) {\r\n\r\n    // const [nameCity, setNameCity] = useState(initialState)\r\n    useEffect(() => {\r\n        console.log(props.nameCity)\r\n    }, [])\r\n    const Map = () => {\r\n        return (\r\n            <GoogleMap\r\n                defaultZoom={12}\r\n                defaultCenter={{ lat: props.Latitude, lng: props.Longitude }}\r\n            >\r\n\r\n                {props.allRestaurant.map((element) => {\r\n                    if (props.nameCity == element.City) {\r\n                        return (\r\n                            <Marker\r\n                                key={element.License}\r\n                                position={{\r\n                                    lat: element.Latitude,\r\n                                    lng: element.Longitude\r\n                                }}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n                    // <Marker\r\n                    //     key={city.License}\r\n                    //     position={{ \r\n                    //         lat: city.Latitude, \r\n                    //         lng: city.Longitude \r\n                    //     }}\r\n                    // />\r\n                )}\r\n            </GoogleMap>\r\n        );\r\n    }\r\n\r\n    const WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\n    return (\r\n        <div style={{ width: \"470px\", height: \"640px\" }}>\r\n            <WrappedMap\r\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBllmc_jF_IqNOPUz9l7_BW87gRZ9IZMC4`}\r\n                loadingElement={<div style={{ height: '100%' }} />}\r\n                containerElement={<div style={{ height: '100%' }} />}\r\n                mapElement={<div style={{ height: '100%' }} />}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Alert.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function AlertForm(props) {\r\n\r\n    const [alertInfo, setAlertInfo] = useState({});\r\n    const [alertDone, setAlertDone] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Make the request .\r\n\r\n        const res = axios.post(\"https://indigestion-prediction-backend.herokuapp.com/api/addAlert\", alertInfo)\r\n            .then(res => {\r\n                // Say to the user that his alert has been token\r\n\r\n                console.log(\"Done\")\r\n            }).catch(function (error) {\r\n                // Say to the user that there is a problem\r\n            });\r\n        props.handleAlertDone();\r\n        console.log(alertInfo);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setAlertInfo(props.restaurant);\r\n    }, []);\r\n\r\n    return (\r\n        <div className className=\"form-container p-3\">\r\n            <Form onSubmit={(e) => handleSubmit(e)}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicName\" value={alertInfo.fullName} onChange={(e) => setAlertInfo({ ...alertInfo, fullName: e.target.value })}>\r\n                        <Form.Label className=\"float-left\">Full Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Name\" required />\r\n                        <Form.Text className=\"text-muted\"></Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Group controlId=\"formBasicAdress\" value={alertInfo.address} onChange={(e) => setAlertInfo({ ...alertInfo, address: e.target.value })}>\r\n                    <Form.Label className=\"float-left\">Your Address</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter address\" required />\r\n                    <Form.Text className=\"text-muted\"></Form.Text>\r\n                </Form.Group>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicRestaurantName\" >\r\n                        <Form.Label className=\"float-left\" > Restaurant Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={alertInfo.restaurantName} readOnly />\r\n                        <Form.Text className=\"text-muted\"></Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formBasicRestaurantAdress\" >\r\n                        <Form.Label className=\"float-left\">Restaurant Address</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder={alertInfo.restaurantAddress} readOnly />\r\n                        <Form.Text className=\"text-muted\"></Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicItam\" value={alertInfo.itemPurchased} onChange={(e) => setAlertInfo({ ...alertInfo, itemPurchased: e.target.value })}>\r\n                        <Form.Label className=\"float-left\">Item Purchased</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Item Purchased\" required />\r\n                        <Form.Text className=\"text-muted\"></Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n\r\n                <Form.Row>\r\n\r\n                    <Form.Group as={Col} controlId=\"formBasicDatePurchased\" value={alertInfo.dateOfPurchase} onChange={(e) => setAlertInfo({ ...alertInfo, dateOfPurchase: e.target.value })}>\r\n                        <Form.Label className=\"float-left\">Date of Purchased</Form.Label>\r\n                        <Form.Control type=\"date\" placeholder=\"MM/DD/YYYY \" required />\r\n                        <Form.Text className=\"text-muted\"></Form.Text>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formBasicDatePurchased\" value={alertInfo.dateOfPurchase} onChange={(e) => setAlertInfo({ ...alertInfo, timeOfPurchase: e.target.value })}>\r\n                        <Form.Label className=\"float-left\">Time of Purchased</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"ss/mm/hhhh \" required />\r\n                        <Form.Text className=\"text-muted\"></Form.Text>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Group controlId=\"formBasicTimePurchased\" value={alertInfo.symptoms} onChange={(e) => setAlertInfo({ ...alertInfo, symptoms: e.target.value })}>\r\n                    <Form.Label className=\"float-left\">Symptoms </Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter the symptoms\" required />\r\n                    <Form.Text className=\"text-muted\"></Form.Text>\r\n                </Form.Group>\r\n                <Button className=\"float-left\" variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                    </Button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Alert.css\"\r\nimport axios from \"axios\";\r\nimport Maps from \"./Maps\";\r\nimport AlertForm from \"./alertForm\";\r\n\r\nexport default function Alert(props) {\r\n    // const [alertInfo, setAlertInfo] = useState({});\r\n    const [alertDone, setAlertDone] = useState(false);\r\n    const [longAndLat, setLongAndLat] = useState({ Longitude: \"\", Latitude: \"\" });\r\n\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n\r\n    //     // Make the request .\r\n\r\n    //     const res = axios.post(\"https://indigestion-prediction-backend.herokuapp.com/api/addAlert\", alertInfo)\r\n    //         .then(res => {\r\n    //             // Say to the user that his alert has been token\r\n    //             setAlertDone(true);\r\n    //         }).catch(function (error) {\r\n    //             // Say to the user that there is a problem\r\n    //         });\r\n    //     console.log(alertInfo);\r\n    //     setAlertDone(true);\r\n    // }\r\n\r\n    const updateLongAndLat = () => {\r\n        for (let index = 0; index < props.allRestaurant.length; index++) {\r\n            if (props.allRestaurant[index].License == props.restaurant.License) {\r\n                const Longitude = props.allRestaurant[index].Longitude;\r\n                const Latitude = props.allRestaurant[index].Latitude;\r\n                setLongAndLat({ Longitude: Longitude, Latitude: Latitude });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleAnotherAlert = () => {\r\n        setAlertDone(false);\r\n    };\r\n\r\n    const handleAlertDone = () => {\r\n        setAlertDone(true);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // setAlertInfo(props.restaurant);\r\n        console.log(props.nameCity)\r\n        updateLongAndLat();\r\n        // AIzaSyBllmc_jF_IqNOPUz9l7_BW87gRZ9IZMC4\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {alertDone &&\r\n                <div>\r\n                    <h3 className=\"pt-5 pb-5\">Your alert has been token. Thank you for your time</h3>\r\n                    <Button className=\"\" onClick={() => handleAnotherAlert()}>Create another alert ?</Button>\r\n                </div>\r\n            }\r\n            {!alertDone && <>\r\n                <h3 className=\"pt-5\">Create an Alert</h3>\r\n                <div className=\"myContainer  d-flex flex-row justify-content-around\">\r\n                    <AlertForm restaurant={props.restaurant} handleAlertDone={() => handleAlertDone()} />\r\n                    <div className=\"mx-3\">\r\n                        <Maps\r\n                            Latitude={longAndLat.Latitude}\r\n                            Longitude={longAndLat.Longitude}\r\n                            allRestaurant={props.allRestaurant}\r\n                            nameCity = {props.nameCity}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </>}\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nfunction Charts(props) {\r\n    const [labels, setLabels] = useState(props.labels);\r\n    const [dataGraph, setdataGraph] = useState(props.dataGraph);\r\n    // const createDataGraph = () => {\r\n    //     let risk = props.riskPrediction;\r\n    //     if (risk<2) {\r\n    //         risk = (risk-1)*100;\r\n    //         setdataGraph([risk, 100-risk, 0]);\r\n    //     }else if(risk < 3){\r\n    //         risk = (risk-2)*100;\r\n    //         setdataGraph([0, risk, 100-risk]);\r\n    //     }else{\r\n    //         setdataGraph([0, 0, 100]);\r\n    //     }\r\n    // }\r\n\r\n    useEffect(() => {\r\n        console.log(props.dataGraph);\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     console.log(props);\r\n    //     setInterval(() => {\r\n    //         console.log(props)\r\n    //         setLabels(props)\r\n    //     }, 500);\r\n        \r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     if(labels !=[] ){\r\n    //         clearInterval();\r\n    //     }\r\n    // }, [labels])\r\n    return (\r\n\r\n        <div className=\"mx-4 mt-3\">\r\n            <Bar\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        label: 'Inspections',\r\n                        backgroundColor: [\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)',\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)',\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)'\r\n                        ],\r\n                        data: dataGraph\r\n                    }]\r\n                }}\r\n                height={300}\r\n\r\n                options={{\r\n                    title: {\r\n                        display:true,\r\n                        text: 'Gravity',\r\n                        // fontsize: \"\"\r\n                    },\r\n                    legend: {\r\n                        display:false,\r\n                    },\r\n                    scales: {\r\n                        yAxes:[\r\n                            {\r\n                                ticks: {\r\n                                    min:0,\r\n                                    max: 3,\r\n                                    stepSize:0.5,\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Charts","import './Prediction.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nexport default function OurPrediction(props) {\r\n    const [predicted, setPredicted] = useState(1)\r\n\r\n    // useEffect(() => {\r\n    //     fetch(\r\n    //       `https://indigestion-prediction-backend.herokuapp.com/api/inspections/${props.License}`\r\n    //     ).then(data => {\r\n    //         fetch('https://itc-yair-gunicorn-flask.herokuapp.com/json', {\r\n    //             method: \"POST\",\r\n    //             headers: {\r\n    //                 \"content-type\": \"application/json\",\r\n    //             },\r\n    //             body: data\r\n    //             })\r\n    //             .then(r => r.json())\r\n    //             .then(d => setPredicted(d))\r\n    //         })\r\n    //         .catch(e => console.log(e))\r\n\r\n        \r\n    // }, [])\r\n\r\n    return (\r\n      <div className=\"history-restaurant our\">\r\n        <h1>\r\n          The predicted rating for this restaurant is: <b>{predicted}</b>{' '}\r\n        </h1>\r\n        <hr />\r\n        <h5>What does this number Mean? </h5>\r\n        <p>Restaurant are rated from 1 to 3.</p>\r\n        <p>A rating of1 means the inspection passed the inspection.</p>\r\n        <p>\r\n          A rating of 2 means that the inspection passed, however warnings were\r\n          issued.\r\n        </p>\r\n        <p>A rating of 3 means the establishment failed the inspection.</p>\r\n      </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport \"./Prediction.css\";\r\nimport Charts from \"./Charts\";\r\nimport axios from \"axios\";\r\nimport OurPrediction from './ourPrediction';\r\n\r\nexport default function Prediction(props) {\r\n    const [dataInspection, setDataInspection] = useState([]);\r\n    const [labels, setLabels] = useState([]);\r\n    const [dataGraph, setDataGraph] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        axios.get(`https://indigestion-prediction-backend.herokuapp.com/api/inspections/${props.restaurant.License}`)\r\n            .then(function (response) {\r\n                // handle success\r\n                // console.log(response.data);\r\n                const getLabels = response.data.map(element => {\r\n                    return element.Inspection_Date;\r\n                })\r\n                // console.log(getLabels)\r\n                setLabels(getLabels);\r\n                const getRiskPred = response.data.map(element => {\r\n                    return element.Risk_pred;\r\n                })\r\n                // console.log(getRiskPred);\r\n                setDataGraph(getRiskPred);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            setLoading(true);\r\n    }, [props])\r\n\r\n    return (\r\n      <>\r\n        {loading && (\r\n          <div className=\"pt-5 mx-3\">\r\n            {console.log(labels)}\r\n            {console.log(dataGraph)}\r\n            <h3 className=\"mb-5 text-center\">\r\n              Please read the information below about the restaurant\r\n            </h3>\r\n            {labels.length && dataGraph.length && (\r\n              <div>\r\n                <div className=\"container-prediction d-flex flex-row align-items-center justify-content-around \">\r\n                  <OurPrediction License={props.restaurant.License} />\r\n                </div>\r\n                <br />\r\n                <div className=\"container-prediction d-flex flex-row align-items-center justify-content-around\">\r\n                  <div className=\"history-restaurant\">\r\n                    <Form.Row className=\"mt-4 mx-3\">\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          Restaurant Name\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={props.restaurant.restaurantName}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"mt-4 mx-3\">\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          Licence number\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={props.restaurant.License}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          number Of inspections\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={labels.length}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"mx-3\">\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          first inspection\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={labels[0]}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          last inspection\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={labels[labels.length - 1]}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                  </div>\r\n                  <div className=\"dougnut\">\r\n                    {console.log(labels)}\r\n                    {console.log(dataGraph)}\r\n                    {labels.length && dataGraph.length && (\r\n                      <Charts labels={labels} dataGraph={dataGraph} />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport './MinistryConfirm.css';\r\nimport { useState } from \"react\";\r\n\r\nexport default function MinistryConfirm(props) {\r\n    const [pass, setPass] = useState('')\r\n    const handleChange =(e) => {\r\n      setPass(e.target.value)\r\n    }\r\n\r\n    const confirmAccess = () => {\r\n        if (pass == 123) {\r\n            props.confirm()\r\n        } else {\r\n            props.deny();\r\n        }\r\n    }\r\n    return (\r\n        <div className='py-5'>\r\n            <div className='box rounded my-4 p-4'>\r\n                Please enter the access code:\r\n                 <input onChange={handleChange} type='password' className='ml-2 rounded' />\r\n                <button onClick={confirmAccess} className=\"ml-2 rounded button\" >Enter</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Pagination({listPerPage, totalList, paginate}) {\r\n\r\n    const pageNumber = [];\r\n\r\n    for (let index = 1; index <= Math.ceil(totalList / listPerPage); index++) {\r\n        pageNumber.push(index);\r\n    }\r\n    return (\r\n        <nav className=\"mx-5 mt-3\">\r\n            <ul className = \"pagination justify-content-center mx-5\">\r\n                {pageNumber.map(number => (\r\n                    <li key = {number} className = \"page-item\">\r\n                        <a onClick = {() => paginate(number)} href= \"#\" className = \"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport './Minstry.css';\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst fake = [\r\n  {\r\n    DBA_Name: 'pizza',\r\n    Address: 'who cares',\r\n    NumberOfAlerts: 5,\r\n    Prediction: 1,\r\n    License: 123\r\n  },\r\n  {\r\n    DBA_Name: 'sushi',\r\n    Address: 'fake street',\r\n    NumberOfAlerts: 2,\r\n    Prediction: 2,\r\n    License: 321\r\n  }\r\n];\r\n\r\nexport default function Ministry() {\r\n  const [list, setList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [listPerPage] = useState(5);\r\n\r\n  const indexOfLastList = currentPage * listPerPage;\r\n  const indexOfFirstList = indexOfLastList - listPerPage;\r\n  const currentList = list.slice(indexOfFirstList, indexOfLastList);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  }\r\n\r\n  function toTitleCase(str) {\r\n    return str.replace(/\\w\\S*/g, function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  }\r\n\r\n  const addTabOptions = (element) => {\r\n    element.nameFormatted = toTitleCase(element.DBA_Name);\r\n    element.addressFormatted = toTitleCase(element.Address);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch('https://indigestion-prediction-backend.herokuapp.com/api/restaurantsAlerts').then(r => r.json()).then(d => {\r\n      let fetched = d.map((elem) => {\r\n        d.sort((a, b) => (a.NumberOfAlerts < b.NumberOfAlerts ? 1 : -1));\r\n        addTabOptions(elem);\r\n        return (\r\n          <tr key={elem.id}>\r\n            <td>{elem.License}</td>\r\n            <td>{elem.nameFormatted}</td>\r\n            <td>{elem.addressFormatted}</td>\r\n            <td>{elem.NumberOfAlerts}</td>\r\n          </tr>\r\n        );\r\n      });\r\n\r\n      setList(fetched);\r\n    }).catch(e => window.alert('There was an unexpected error.'))\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <table className='rounded mx-auto mb-2'>\r\n        <thead>\r\n          <tr key=\"12\">\r\n            <th>License</th>\r\n            <th>Name</th>\r\n            <th>Address</th>\r\n            <th>Alerts in the last 3 days</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{currentList}</tbody>\r\n      </table>\r\n      <Pagination listPerPage = {listPerPage} totalList = {list.length} paginate = {paginate}/>\r\n    </>\r\n\r\n  );\r\n}\r\n","import { Combobox } from 'react-widgets';\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport Alert from './Component/Alert';\r\nimport Prediction from './Component/Prediction';\r\nimport MinistryConfirm from './Component/MinistryConfirm';\r\nimport Ministry from './Component/Ministry';\r\nlet Api_Url =\r\n  'https://indigestion-prediction-backend.herokuapp.com/api/restaurants/';\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [selected, setSelected] = useState('');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [showPredict, setShowPredict] = useState(false);\r\n  const [alertProps, setAlertProps] = useState({});\r\n  const [mConfirm, setMConfirm] = useState(false)\r\n  const [ministry, setMinistry] = useState(false)\r\n  const [nameCity, setNameCity] = useState();\r\n\r\n  function toTitleCase(str) {\r\n    return str.replace(/\\w\\S*/g, function (txt) {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    const addTabOption = (data) => {\r\n      data.forEach((element) => {\r\n        element.text = `${toTitleCase(element.DBA_Name)} at ${toTitleCase(\r\n          element.Address \r\n        )}`;\r\n      });\r\n    };\r\n    fetch(`${Api_Url}`)\r\n      .then((res) => res.json())\r\n      .then((d) => {\r\n        addTabOption(d);\r\n        setData(d);\r\n        let selections = d.map((elem) => elem.text);\r\n        selections.sort();\r\n        setOptions(selections);\r\n      })\r\n      .catch((e) => {\r\n        Swal.fire('Trouble connecting to server');\r\n      });\r\n  }, []);\r\n\r\n  const handleSelected = (e) => {\r\n    setSelected(e);\r\n    setShowAlert(false);\r\n    setShowPredict(false);\r\n        setMConfirm(false);\r\n        setMinistry(false);\r\n  };\r\n\r\n  const showAssessment = () => {\r\n    setShowAlert(false);\r\n    setMConfirm(false);\r\n    setMinistry(false);\r\n    \r\n\r\n    try {\r\n      const restaurant = data.find((elem) => elem.text === selected);\r\n      let rest = {\r\n        restaurantName: restaurant.DBA_Name,\r\n        restaurantAddress: restaurant.Address,\r\n        License: restaurant.License\r\n      };\r\n      setAlertProps(rest);\r\n      setShowPredict(true);\r\n    } catch {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleShowAlert = () => {\r\n    setShowPredict(false);\r\n        setMConfirm(false);\r\n        setMinistry(false);\r\n\r\n    try {\r\n      const restaurant = data.find((elem) => elem.text === selected);\r\n      let rest = {\r\n        restaurantName: restaurant.DBA_Name,\r\n        restaurantAddress: restaurant.Address,\r\n        License: restaurant.License\r\n      };\r\n      let cityName = restaurant.City;\r\n      setNameCity(cityName);\r\n      setAlertProps(rest);\r\n      setShowAlert(true);\r\n    } catch {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const grantAccess =  () => {\r\n    setMConfirm(false)\r\n    setMinistry(true)\r\n  }\r\n\r\n\r\n  const denyAccess =() => {\r\n    Swal.fire('Access denied');\r\n    setMConfirm(false)\r\n\r\n  }\r\n\r\n  const openMConfirm = () => {\r\n    setMConfirm(true)\r\n    setShowAlert(false)\r\n    setShowPredict(false)\r\n  }\r\n\r\n  return ( \r\n    <div>\r\n      <div className=\"top px-3 py-3 rounded\">\r\n        <div className=\"title\">\r\n          <h2>Welcome to Indigert</h2>\r\n          <div onClick={() => openMConfirm()} className=\"titleBtn\">\r\n            Access Health Ministry Section\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        To report a problem or see our predicted rating, please select a\r\n        restaurant:\r\n        <div className=\"selector   my-3\">\r\n          <Combobox\r\n            data={options}\r\n            onChange={(e) => handleSelected(e)}\r\n            caseSensitive={false}\r\n            minLength={3}\r\n            filter=\"contains\"\r\n          />\r\n        </div>\r\n        {selected !== '' && (\r\n          <p className=\"btns mt-2\">\r\n            <Button\r\n              className=\"mr-5 font-weight-bold btn\"\r\n              variant=\"danger\"\r\n              onClick={() => handleShowAlert()}\r\n            >\r\n              Report a potential problem\r\n            </Button>\r\n            <Button\r\n              className=\"ml-5 font-weight-bold btn\"\r\n              variant=\"secondary\"\r\n              onClick={() => showAssessment()}\r\n            >\r\n              See our assessment\r\n            </Button>\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          {ministry &&  <div className= 'pt-5'><Ministry /></div>}\r\n          {mConfirm && <MinistryConfirm confirm={() => grantAccess()} deny={ () => denyAccess()}/>}\r\n          {showPredict && <Prediction restaurant={alertProps} />}\r\n          {showAlert && <Alert restaurant={alertProps} allRestaurant={data} nameCity={nameCity}/>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}