[{"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\reportWebVitals.js":"1","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Alert.jsx":"2","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Charts.jsx":"3","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\App.js":"4","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Prediction.jsx":"5","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Maps.jsx":"6","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\MinistryConfirm.js":"7","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Ministry.js":"8","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\ourPrediction.js":"9","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\index.js":"10"},{"size":375,"mtime":1611219323550,"results":"11","hashOfConfig":"12"},{"size":2961,"mtime":1611231869389,"results":"13","hashOfConfig":"12"},{"size":3222,"mtime":1611219323374,"results":"14","hashOfConfig":"12"},{"size":4991,"mtime":1611232397297,"results":"15","hashOfConfig":"12"},{"size":5490,"mtime":1611233187847,"results":"16","hashOfConfig":"12"},{"size":1976,"mtime":1611231869389,"results":"17","hashOfConfig":"12"},{"size":799,"mtime":1611224204011,"results":"18","hashOfConfig":"12"},{"size":1819,"mtime":1611227086243,"results":"19","hashOfConfig":"12"},{"size":1403,"mtime":1611234064457,"results":"20","hashOfConfig":"12"},{"size":517,"mtime":1611219323382,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wmfq7p",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\reportWebVitals.js",[],["45","46"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Alert.jsx",["47","48","49","50","51"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Charts.jsx",["52","53","54"],"import React, { useState, useEffect } from \"react\"\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nfunction Charts(props) {\r\n    const [labels, setLabels] = useState(props.labels);\r\n    const [dataGraph, setdataGraph] = useState(props.dataGraph);\r\n    // const createDataGraph = () => {\r\n    //     let risk = props.riskPrediction;\r\n    //     if (risk<2) {\r\n    //         risk = (risk-1)*100;\r\n    //         setdataGraph([risk, 100-risk, 0]);\r\n    //     }else if(risk < 3){\r\n    //         risk = (risk-2)*100;\r\n    //         setdataGraph([0, risk, 100-risk]);\r\n    //     }else{\r\n    //         setdataGraph([0, 0, 100]);\r\n    //     }\r\n    // }\r\n\r\n    useEffect(() => {\r\n        console.log(props.dataGraph);\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     console.log(props);\r\n    //     setInterval(() => {\r\n    //         console.log(props)\r\n    //         setLabels(props)\r\n    //     }, 500);\r\n        \r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     if(labels !=[] ){\r\n    //         clearInterval();\r\n    //     }\r\n    // }, [labels])\r\n    return (\r\n\r\n        <div className=\"mx-4 mt-3\">\r\n            <Bar\r\n                data={{\r\n                    labels: labels,\r\n                    datasets: [{\r\n                        label: 'Inspections',\r\n                        backgroundColor: [\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)',\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)',\r\n                            'rgba(17, 171, 17, 0.2)',\r\n                            'rgba(245, 193, 22, 0.2)',\r\n                            'rgba(226, 19, 19, 0.2)',\r\n                            'rgba(124, 32, 86, 0.2)',\r\n                            'rgba(150, 32, 06, 0.2)',\r\n                            'rgba(86, 15, 10, 0.2)'\r\n                        ],\r\n                        data: dataGraph\r\n                    }]\r\n                }}\r\n                height={300}\r\n\r\n                options={{\r\n                    title: {\r\n                        display:true,\r\n                        text: 'Gravity',\r\n                        // fontsize: \"\"\r\n                    },\r\n                    legend: {\r\n                        display:false,\r\n                    },\r\n                    scales: {\r\n                        yAxes:[\r\n                            {\r\n                                ticks: {\r\n                                    min:0,\r\n                                    max: 3,\r\n                                    stepSize:0.5,\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Charts","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\App.js",[],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Prediction.jsx",["55","56","57"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport \"./Prediction.css\";\r\nimport Charts from \"./Charts\";\r\nimport axios from \"axios\";\r\nimport OurPrediction from './ourPrediction';\r\n\r\nexport default function Prediction(props) {\r\n    const [dataInspection, setDataInspection] = useState([]);\r\n    const [labels, setLabels] = useState([]);\r\n    const [dataGraph, setDataGraph] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        axios.get(`https://indigestion-prediction-backend.herokuapp.com/api/inspections/${props.restaurant.License}`)\r\n            .then(function (response) {\r\n                // handle success\r\n                // console.log(response.data);\r\n                const getLabels = response.data.map(element => {\r\n                    return element.Inspection_Date;\r\n                })\r\n                // console.log(getLabels)\r\n                setLabels(getLabels);\r\n                const getRiskPred = response.data.map(element => {\r\n                    return element.Risk_pred;\r\n                })\r\n                // console.log(getRiskPred);\r\n                setDataGraph(getRiskPred);\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            setLoading(true);\r\n    }, [props])\r\n\r\n    return (\r\n      <>\r\n        {loading && (\r\n          <div className=\"pt-5 mx-3\">\r\n            {console.log(labels)}\r\n            {console.log(dataGraph)}\r\n            <h3 className=\"mb-5 text-center\">\r\n              Please read the information below about the restaurant\r\n            </h3>\r\n            {labels.length && dataGraph.length && (\r\n              <div>\r\n                <div className=\"container-prediction d-flex flex-row align-items-center justify-content-around \">\r\n                  <OurPrediction License={props.restaurant.License} />\r\n                </div>\r\n                <br />\r\n                <div className=\"container-prediction d-flex flex-row align-items-center justify-content-around\">\r\n                  <div className=\"history-restaurant\">\r\n                    <Form.Row className=\"mt-4 mx-3\">\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          Restaurant Name\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={props.restaurant.restaurantName}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"mt-4 mx-3\">\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          Licence number\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={props.restaurant.License}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          number Of inspections\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={labels.length}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"mx-3\">\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          first inspection\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={labels[0]}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                      <Form.Group as={Col}>\r\n                        <Form.Label className=\"ml-2 float-left\">\r\n                          last inspection\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                          className=\"text-info\"\r\n                          value={labels[labels.length - 1]}\r\n                          name=\"\"\r\n                          type=\"text\"\r\n                          placeholder=\"\"\r\n                        />\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n                  </div>\r\n                  <div className=\"dougnut\">\r\n                    {console.log(labels)}\r\n                    {console.log(dataGraph)}\r\n                    {labels.length && dataGraph.length && (\r\n                      <Charts labels={labels} dataGraph={dataGraph} />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n","C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Maps.jsx",["58","59","60","61"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\MinistryConfirm.js",["62"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\Ministry.js",["63","64"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\Component\\ourPrediction.js",["65","66"],"C:\\Users\\betos\\Desktop\\hackathonITC\\frontend-deploy\\HackathonFrontEndITC\\src\\index.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"75","line":2,"column":24,"nodeType":"73","messageId":"74","endLine":2,"endColumn":27},{"ruleId":"71","severity":1,"message":"76","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":33,"column":52,"nodeType":"79","messageId":"80","endLine":33,"endColumn":54},{"ruleId":"81","severity":1,"message":"82","line":57,"column":8,"nodeType":"83","endLine":57,"endColumn":10,"suggestions":"84"},{"ruleId":"71","severity":1,"message":"85","line":5,"column":20,"nodeType":"73","messageId":"74","endLine":5,"endColumn":29},{"ruleId":"71","severity":1,"message":"86","line":6,"column":23,"nodeType":"73","messageId":"74","endLine":6,"endColumn":35},{"ruleId":"81","severity":1,"message":"87","line":22,"column":8,"nodeType":"83","endLine":22,"endColumn":10,"suggestions":"88"},{"ruleId":"71","severity":1,"message":"89","line":2,"column":16,"nodeType":"73","messageId":"74","endLine":2,"endColumn":22},{"ruleId":"71","severity":1,"message":"90","line":9,"column":12,"nodeType":"73","messageId":"74","endLine":9,"endColumn":26},{"ruleId":"71","severity":1,"message":"91","line":9,"column":28,"nodeType":"73","messageId":"74","endLine":9,"endColumn":45},{"ruleId":"71","severity":1,"message":"92","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"93","line":11,"column":8,"nodeType":"83","endLine":11,"endColumn":10,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":19,"column":52,"nodeType":"97","messageId":"98","endLine":19,"endColumn":54},{"ruleId":"77","severity":1,"message":"78","line":20,"column":40,"nodeType":"79","messageId":"80","endLine":20,"endColumn":42},{"ruleId":"77","severity":1,"message":"78","line":12,"column":18,"nodeType":"79","messageId":"80","endLine":12,"endColumn":20},{"ruleId":"71","severity":1,"message":"99","line":4,"column":7,"nodeType":"73","messageId":"74","endLine":4,"endColumn":11},{"ruleId":"81","severity":1,"message":"100","line":52,"column":8,"nodeType":"83","endLine":52,"endColumn":10,"suggestions":"101"},{"ruleId":"71","severity":1,"message":"102","line":2,"column":20,"nodeType":"73","messageId":"74","endLine":2,"endColumn":29},{"ruleId":"71","severity":1,"message":"103","line":6,"column":23,"nodeType":"73","messageId":"74","endLine":6,"endColumn":35},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.nameCity' and 'updateLongAndLat'. Either include them or remove the dependency array.","ArrayExpression",["106"],"'setLabels' is assigned a value but never used.","'setdataGraph' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.dataGraph'. Either include it or remove the dependency array.",["107"],"'Button' is defined but never used.","'dataInspection' is assigned a value but never used.","'setDataInspection' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'props.nameCity'. Either include it or remove the dependency array.",["108"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'fake' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addTabOptions'. Either include it or remove the dependency array.",["109"],"'useEffect' is defined but never used.","'setPredicted' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [props.nameCity, updateLongAndLat]",{"range":"118","text":"119"},"Update the dependencies array to be: [props.dataGraph]",{"range":"120","text":"121"},"Update the dependencies array to be: [props.nameCity]",{"range":"122","text":"123"},"Update the dependencies array to be: [addTabOptions]",{"range":"124","text":"125"},[1890,1892],"[props.nameCity, updateLongAndLat]",[719,721],"[props.dataGraph]",[314,316],"[props.nameCity]",[1480,1482],"[addTabOptions]"]